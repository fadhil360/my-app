{"version":3,"sources":["firebase.js","components/Login.js","components/SignUp.js","components/CommandBlock.js","components/Robot.js","components/VirtualLab.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","Login","_ref","setUser","email","setEmail","useState","password","setPassword","error","setError","React","createElement","onSubmit","async","e","preventDefault","userCredential","signInWithEmailAndPassword","user","message","type","placeholder","value","onChange","target","required","SignUp","createUserWithEmailAndPassword","CommandBlock","onClose","addCommand","className","onClick","map","command","index","key","Robot","commands","startRobot","updatePosition","squares","setSquares","position","setPosition","x","y","color","moveNorth","pos","newY","moveSouth","moveEast","newX","moveWest","Change","pickedUpItem","item","updatedSquares","square","sleep","milliseconds","Promise","resolve","setTimeout","useEffect","isRunning","prevPosition","newPosition","console","log","executeCommands","VirtualLab","canvasRef","useRef","setSquare","size","showCommand","setShowCommand","setCommands","setStartRobot","isClickable","setIsClickable","isClickables","setIsClickables","isClickabler","setIsClickabler","drawSquare","ctx","fillStyle","fillRect","stopRobotHandler","current","getContext","clearRect","canvas","width","height","forEach","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","drawGrid","startRobotHandler","disabled","resetBoard","prevSquares","ref","event","rect","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","style","border","resetCommands","cmd","closeCommandBlock","prevSquare","App","onAuthStateChanged","Router","BrowserRouter","basename","Routes","Route","path","element","Navigate","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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AAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,CAACF,EAAI,EAAIC,EAAI,EAAIC,MAAO,SACxB,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","file":"static/js/main.56e95365.chunk.js","sourcesContent":["\r\n// src/firebase.js\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA3niHE0kklY7gUFyNtAXNtYaDRENiKHmY\",\r\n    authDomain: \"webdemo-3cd29.firebaseapp.com\",\r\n    projectId: \"webdemo-3cd29\",\r\n    storageBucket: \"webdemo-3cd29.firebasestorage.app\",\r\n    messagingSenderId: \"773019625150\",\r\n    appId: \"1:773019625150:web:1b57c4775a85e5fc9120ef\",\r\n    measurementId: \"G-6LKLY0T5GH\"\r\n  };\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Authentication\r\nconst auth = getAuth(app);\r\n\r\nexport { auth, signInWithEmailAndPassword, createUserWithEmailAndPassword };\r\n","// src/components/Login.js\r\nimport React, { useState } from 'react';\r\nimport { signInWithEmailAndPassword } from '../firebase';\r\nimport { auth } from '../firebase';\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      setUser(userCredential.user);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// src/components/SignUp.js\r\nimport React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword } from '../firebase';\r\nimport { auth } from '../firebase';\r\n\r\nconst SignUp = ({ setUser }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      setUser(userCredential.user);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSignUp}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\n\r\nconst CommandBlock = ({ onClose,addCommand }) => {\r\n  const commands = ['Move North','Move East', 'Move South', 'Move West','Change'];\r\n\r\n  return (\r\n    <div className=\"block-container\">\r\n      <div className=\"reset\">\r\n      <h3>Pick Command:</h3>\r\n      <button onClick={onClose}className=\"close-btn\">Close </button>\r\n\r\n      </div>\r\n      {commands.map((command, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"block\"\r\n          onClick={() => addCommand(command)}\r\n        >\r\n          {command}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommandBlock;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst Robot = ({ commands, startRobot, updatePosition, squares, setSquares }) => {\r\n  const [position, setPosition] = useState({ x: 0, y: 0, color: 'blue' });\r\n\r\n  const moveNorth = (pos) => {\r\n    const newY = pos.y - 1 < 0 ? 9 : pos.y - 1;\r\n    return { ...pos, y: newY };\r\n  };\r\n\r\n  const moveSouth = (pos) => {\r\n    const newY = pos.y + 1 > 9 ? 0 : pos.y + 1;\r\n    return { ...pos, y: newY };\r\n  };\r\n\r\n  const moveEast = (pos) => {\r\n    const newX = pos.x + 1 > 9 ? 0 : pos.x + 1;\r\n    return { ...pos, x: newX };\r\n  };\r\n\r\n  const moveWest = (pos) => {\r\n    const newX = pos.x - 1 < 0 ? 9 : pos.x - 1;\r\n    return { ...pos, x: newX };\r\n  };\r\n\r\n  const Change = (pos) => {\r\n    let pickedUpItem = pos.item; // Start with the robot's current item\r\n    const updatedSquares = squares.map((square) => {\r\n      // If the robot is on the same square and there's an item to pick up\r\n      if (pos.x === square.x && pos.y === square.y ) {\r\n        square.color='blue'; // Robot picks up the item\r\n        // Remove the item from the square after pickup\r\n      }\r\n      return square;\r\n    });\r\n  \r\n    setSquares(updatedSquares); // Update squares in App.js\r\n    return { ...pos, item: pickedUpItem }; // Return the robot's updated position and item\r\n  };\r\n  \r\n  \r\n  // Helper function to introduce a delay\r\n  const sleep = (milliseconds) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isRunning = true; // Control flag for stopping the loop\r\n\r\n    // Async function to execute commands with delay\r\n    const executeCommands = async () => {\r\n      while (isRunning && startRobot) {\r\n        for (const command of commands) {\r\n          if (!isRunning || !startRobot) break;\r\n\r\n          setPosition((prevPosition) => {\r\n            let newPosition = prevPosition;\r\n            if (command === 'Move North') newPosition = moveNorth(prevPosition);\r\n            if (command === 'Move East') newPosition = moveEast(prevPosition);\r\n            if (command === 'Move South') newPosition = moveSouth(prevPosition);\r\n            if (command === 'Move West') newPosition = moveWest(prevPosition);\r\n            if (command === 'Change') newPosition = Change(prevPosition);\r\n            console.log(command);\r\n            console.log('Updated Position:', newPosition);\r\n\r\n            // Call updatePosition with the new position\r\n            updatePosition(newPosition);\r\n\r\n            return newPosition; // Update the state correctly\r\n          });\r\n\r\n          await sleep(100); // 0.5-second delay\r\n        }\r\n      }\r\n    };\r\n\r\n    if (startRobot) {\r\n      executeCommands();\r\n    }\r\n\r\n    // Clean up function to stop the loop when component unmounts or stops\r\n    return () => {\r\n      isRunning = false;\r\n    };\r\n  }, [startRobot, commands]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default Robot;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport './styles.css';\r\nimport CommandBlock from './CommandBlock';\r\nimport Robot from './Robot';\r\nconst VirtualLab = () => {\r\n  const canvasRef = useRef(null);\r\n  \r\n  const [square, setSquare] = useState({ x: 0, y: 0, size: 46, color: 'green'});\r\n    const [squares, setSquares] = useState([\r\n      {x:  0 , y:  0 , color: 'white'},\r\n      {x:  0 , y:  1 , color: 'white'},\r\n      {x:  0 , y:  2 , color: 'white'},\r\n      {x:  0 , y:  3 , color: 'white'},\r\n      {x:  0 , y:  4 , color: 'white'},\r\n      {x:  0 , y:  5 , color: 'white'},\r\n      {x:  0 , y:  6 , color: 'white'},\r\n      {x:  0 , y:  7 , color: 'white'},\r\n      {x:  0 , y:  8 , color: 'white'},\r\n      {x:  0 , y:  9 , color: 'white'},\r\n      {x:  1 , y:  0 , color: 'white'},\r\n      {x:  1 , y:  1 , color: 'white'},\r\n      {x:  1 , y:  2 , color: 'white'},\r\n      {x:  1 , y:  3 , color: 'white'},\r\n      {x:  1 , y:  4 , color: 'white'},\r\n      {x:  1 , y:  5 , color: 'white'},\r\n      {x:  1 , y:  6 , color: 'white'},\r\n      {x:  1 , y:  7 , color: 'white'},\r\n      {x:  1 , y:  8 , color: 'white'},\r\n      {x:  1 , y:  9 , color: 'white'},\r\n      {x:  2 , y:  0 , color: 'white'},\r\n      {x:  2 , y:  1 , color: 'white'},\r\n      {x:  2 , y:  2 , color: 'white'},\r\n      {x:  2 , y:  3 , color: 'white'},\r\n      {x:  2 , y:  4 , color: 'white'},\r\n      {x:  2 , y:  5 , color: 'white'},\r\n      {x:  2 , y:  6 , color: 'white'},\r\n      {x:  2 , y:  7 , color: 'white'},\r\n      {x:  2 , y:  8 , color: 'white'},\r\n      {x:  2 , y:  9 , color: 'white'},\r\n      {x:  3 , y:  0 , color: 'white'},\r\n      {x:  3 , y:  1 , color: 'white'},\r\n      {x:  3 , y:  2 , color: 'white'},\r\n      {x:  3 , y:  3 , color: 'white'},\r\n      {x:  3 , y:  4 , color: 'white'},\r\n      {x:  3 , y:  5 , color: 'white'},\r\n      {x:  3 , y:  6 , color: 'white'},\r\n      {x:  3 , y:  7 , color: 'white'},\r\n      {x:  3 , y:  8 , color: 'white'},\r\n      {x:  3 , y:  9 , color: 'white'},\r\n      {x:  4 , y:  0 , color: 'white'},\r\n      {x:  4 , y:  1 , color: 'white'},\r\n      {x:  4 , y:  2 , color: 'white'},\r\n      {x:  4 , y:  3 , color: 'white'},\r\n      {x:  4 , y:  4 , color: 'white'},\r\n      {x:  4 , y:  5 , color: 'white'},\r\n      {x:  4 , y:  6 , color: 'white'},\r\n      {x:  4 , y:  7 , color: 'white'},\r\n      {x:  4 , y:  8 , color: 'white'},\r\n      {x:  4 , y:  9 , color: 'white'},\r\n      {x:  5 , y:  0 , color: 'white'},\r\n      {x:  5 , y:  1 , color: 'white'},\r\n      {x:  5 , y:  2 , color: 'white'},\r\n      {x:  5 , y:  3 , color: 'white'},\r\n      {x:  5 , y:  4 , color: 'white'},\r\n      {x:  5 , y:  5 , color: 'white'},\r\n      {x:  5 , y:  6 , color: 'white'},\r\n      {x:  5 , y:  7 , color: 'white'},\r\n      {x:  5 , y:  8 , color: 'white'},\r\n      {x:  5 , y:  9 , color: 'white'},\r\n      {x:  6 , y:  0 , color: 'white'},\r\n      {x:  6 , y:  1 , color: 'white'},\r\n      {x:  6 , y:  2 , color: 'white'},\r\n      {x:  6 , y:  3 , color: 'white'},\r\n      {x:  6 , y:  4 , color: 'white'},\r\n      {x:  6 , y:  5 , color: 'white'},\r\n      {x:  6 , y:  6 , color: 'white'},\r\n      {x:  6 , y:  7 , color: 'white'},\r\n      {x:  6 , y:  8 , color: 'white'},\r\n      {x:  6 , y:  9 , color: 'white'},\r\n      {x:  7 , y:  0 , color: 'white'},\r\n      {x:  7 , y:  1 , color: 'white'},\r\n      {x:  7 , y:  2 , color: 'white'},\r\n      {x:  7 , y:  3 , color: 'white'},\r\n      {x:  7 , y:  4 , color: 'white'},\r\n      {x:  7 , y:  5 , color: 'white'},\r\n      {x:  7 , y:  6 , color: 'white'},\r\n      {x:  7 , y:  7 , color: 'white'},\r\n      {x:  7 , y:  8 , color: 'white'},\r\n      {x:  7 , y:  9 , color: 'white'},\r\n      {x:  8 , y:  0 , color: 'white'},\r\n      {x:  8 , y:  1 , color: 'white'},\r\n      {x:  8 , y:  2 , color: 'white'},\r\n      {x:  8 , y:  3 , color: 'white'},\r\n      {x:  8 , y:  4 , color: 'white'},\r\n      {x:  8 , y:  5 , color: 'white'},\r\n      {x:  8 , y:  6 , color: 'white'},\r\n      {x:  8 , y:  7 , color: 'white'},\r\n      {x:  8 , y:  8 , color: 'white'},\r\n      {x:  8 , y:  9 , color: 'white'},\r\n      {x:  9 , y:  0 , color: 'white'},\r\n      {x:  9 , y:  1 , color: 'white'},\r\n      {x:  9 , y:  2 , color: 'white'},\r\n      {x:  9 , y:  3 , color: 'white'},\r\n      {x:  9 , y:  4 , color: 'white'},\r\n      {x:  9 , y:  5 , color: 'white'},\r\n      {x:  9 , y:  6 , color: 'white'},\r\n      {x:  9 , y:  7 , color: 'white'},\r\n      {x:  9 , y:  8 , color: 'white'},\r\n      {x:  9 , y:  9 , color: 'white'},]);\r\n  const [showCommand, setShowCommand] = useState(false);\r\n  const [commands, setCommands] = useState([]);\r\n  const [startRobot, setStartRobot] = useState(false);\r\n  const [isClickable, setIsClickable] = useState(false);\r\n  const [isClickables, setIsClickables] = useState(false);\r\n  const [isClickabler, setIsClickabler] = useState(false);\r\n  // Function to add command to the list\r\n  const addCommand = (command) => {\r\n    setCommands([...commands, command]);\r\n    setIsClickable(true);\r\n    stopRobotHandler()\r\n  };\r\n\r\n  \r\n  // Function to reset commands\r\n  const resetCommands = () => {\r\n    setCommands([]);\r\n    setIsClickable(false);\r\n    stopRobotHandler()\r\n  };\r\n  const resetBoard = () => {\r\n    setSquares(prevSquares => \r\n      prevSquares.map(square => ({\r\n        ...square,\r\n        color: \"white\"\r\n      }))\r\n    );\r\n  };\r\n  \r\n  // Function to draw the square on the canvas\r\n  const drawSquare = (ctx, x, y, size, color) => {\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(x* 50 + 2, y* 50 + 2, size, size);\r\n  };\r\n\r\n  const drawGrid = (ctx) => {\r\n    // Set grid line color\r\n    ctx.strokeStyle = 'black';\r\n    ctx.lineWidth = 1;\r\n    const width = 500;\r\n    const height = 500;\r\n    const cellSize = 50;\r\n\r\n    // Draw vertical lines\r\n    for (let x = 0; x <= width; x += cellSize) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, 0);\r\n      ctx.lineTo(x, height);\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw horizontal lines\r\n    for (let y = 0; y <= height; y += cellSize) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, y);\r\n      ctx.lineTo(width, y);\r\n      ctx.stroke();\r\n    }\r\n  };\r\n    // Update the square position when the robot moves\r\n    const updateSquarePosition = (newPosition) => {\r\n      setSquare((prevSquare) => ({\r\n        ...prevSquare,\r\n        x: newPosition.x, // Adjusting for grid size (50px)\r\n        y: newPosition.y ,\r\n      }));\r\n    };\r\n  const startRobotHandler = () => {\r\n    setStartRobot(true); // Trigger the Robot to start\r\n    setIsClickables(true)\r\n    setIsClickabler(false)\r\n  };\r\n  const stopRobotHandler = () => {\r\n    setStartRobot(false); // Trigger the Robot to start\r\n    setIsClickables(false)\r\n    setIsClickabler(true)\r\n  };\r\n  // Function to handle mouse clicks on the canvas\r\n  const handleCanvasClick = (event) => {\r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    // Get mouse coordinates relative to the canvas\r\n    const mouseX = event.clientX - rect.left;\r\n    const mouseY = event.clientY - rect.top;\r\n    console.log(\"squre pos\" + square.x )\r\n    console.log(\"squre pos\" + square.y )\r\n    console.log(\"squre pos\" + mouseX )\r\n    console.log(\"squre pos\" + mouseY )\r\n    // Check if the mouse is within the square boundaries\r\n    if (\r\n      mouseX >= square.x * 50+2 &&\r\n      mouseX <= square.x* 50+2 + square.size &&\r\n      mouseY >= square.y* 50+2 &&\r\n      mouseY <= square.y* 50+2 + square.size\r\n    ) {\r\n      // Toggle command block visibility when square is clicked\r\n      setShowCommand(true);\r\n    }\r\n  };\r\n\r\n  // useEffect to set up the canvas and draw the square\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // Clear the canvas\r\n    squares.forEach((square)=>{\r\n      drawSquare(ctx, square.x, square.y, 46, square.color);\r\n    })\r\n    drawSquare(ctx, square.x, square.y, square.size, square.color);\r\n    drawGrid(ctx);\r\n  }, [squares,square]);\r\n\r\n  // Function to close the CommandBlock\r\n  const closeCommandBlock = () => {\r\n    setShowCommand(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Press the block to start giving command</h1>\r\n      <div className=\"container\">\r\n        <div className='StartStop'>\r\n          <button  className=\"start\" \r\n          onClick={startRobotHandler}\r\n          disabled={!isClickable} >\r\n            Start\r\n          </button>\r\n          <button  className=\"start\" \r\n          onClick={stopRobotHandler}\r\n          disabled={!isClickables}>\r\n            Stop\r\n          </button>\r\n          <button  className=\"start\" \r\n          onClick={resetBoard}\r\n          disabled={!isClickabler}>\r\n            reset\r\n          </button>\r\n        </div>\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={500}\r\n          height={500}\r\n          onClick={handleCanvasClick}\r\n          style={{ border: '1px solid black' }}\r\n        />\r\n          {showCommand && (\r\n                    <div className=\"command-list\"> \r\n                    <div className=\"reset\">\r\n                    <h3>Command List:</h3>\r\n                      <button onClick={resetCommands} className=\"reset-btn\">\r\n                        Reset\r\n                      </button>\r\n                    </div>\r\n            \r\n                      {commands.map((cmd, index) => (\r\n                        <div key={index} className=\"command\">\r\n                          {index + 1}. {cmd}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n          )}\r\n\r\n          {showCommand && (\r\n            <CommandBlock onClose={closeCommandBlock}addCommand={addCommand} />\r\n          )}\r\n        <Robot commands={commands} startRobot={startRobot} updatePosition={updateSquarePosition} setSquares={setSquares} squares={squares}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VirtualLab;\r\n","import { BrowserRouter } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { auth } from './firebase';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport VirtualLab from './components/VirtualLab';\nimport { Navigate } from 'react-router-dom';\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    auth.onAuthStateChanged(setUser);\n  }, []);\n\n  return (\n\n\n    <Router>\n      <BrowserRouter basename=\"/my-react-app\">\n  {/* your routes */}\n</BrowserRouter>\n      <div>\n        <h1>Welcome to the Virtual Lab</h1>\n        <Routes>\n          <Route path=\"/login\" element={user ? <Navigate to=\"/lab\" /> : <Login setUser={setUser} />} />\n          <Route path=\"/signup\" element={user ? <Navigate to=\"/lab\" /> : <SignUp setUser={setUser} />} />\n          <Route path=\"/lab\" element={user ? <VirtualLab /> : <Navigate to=\"/login\" />} />\n          <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}